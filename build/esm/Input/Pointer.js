import { Event, Utility } from '../index.js';
export class Pointer extends Event.Dispatcher {
    constructor(eventType = 'pointer', autoTouchEvents = false, target = document) {
        super();
        this.angle = 0;
        this.changed = false;
        this.distance = 0;
        this.down = false;
        this.dx = 0;
        this.dy = 0;
        this.friction = 0.95;
        this.inertia = 0;
        this.lastX = 0;
        this.lastY = 0;
        this.moved = false;
        this.rx = 0;
        this.rx2 = 0;
        this.ry = 0;
        this.ry2 = 0;
        this.rox = 0;
        this.roy = 0;
        this.rox2 = 0;
        this.roy2 = 0;
        this.ox = 0;
        this.oy = 0;
        this.time = Date.now();
        this.timeDown = 0;
        this.timeDownDifference = 0;
        this.timeDifference = 0;
        this.vx = 0;
        this.vy = 0;
        this.x = 0;
        this.x2 = 0;
        this.y = 0;
        this.y2 = 0;
        this.wheel = false;
        this.wheelDelta = 0;
        this.moveThreshold = 5;
        this.cid = Math.random().toString(36).substr(2, 9);
        this.eventType = '';
        this.holdTimeout = null;
        this.lastTapTime = 0;
        this.tapCount = 0;
        this.tapTimeout = null;
        this.twoFingerTapCount = 0;
        this.vxHistory = [];
        this.vyHistory = [];
        this.Handle_OnInterval = this.Handle_OnInterval.bind(this);
        this.Handle_OnPointerDown = this.Handle_OnPointerDown.bind(this);
        this.Handle_OnPointerMove = this.Handle_OnPointerMove.bind(this);
        this.Handle_OnPointerUp = this.Handle_OnPointerUp.bind(this);
        this.Handle_OnWheel = this.Handle_OnWheel.bind(this);
        this.autoTouchEvents = autoTouchEvents;
        this.eventType = eventType;
        this.target = target;
        this.attachEvents();
    }
    attachEvents() {
        if (typeof window !== 'undefined' && 'ontouchstart' in window && this.autoTouchEvents) {
            this.target.addEventListener('touchstart', this.Handle_OnPointerDown);
            this.target.addEventListener('touchmove', this.Handle_OnPointerMove);
            this.target.addEventListener('touchend', this.Handle_OnPointerUp);
        }
        else {
            this.target.addEventListener(this.downEvent, this.Handle_OnPointerDown);
            this.target.addEventListener(this.moveEvent, this.Handle_OnPointerMove);
            this.target.addEventListener(this.upEvent, this.Handle_OnPointerUp);
        }
        this.target.addEventListener('wheel', this.Handle_OnWheel, {
            passive: false,
        });
        Utility.Interval.add(this.Handle_OnInterval, 1000 / 60, `${this.cid}-pointer-velocity`);
    }
    detachEvents() {
        if (typeof window !== 'undefined' && 'ontouchstart' in window && this.autoTouchEvents) {
            this.target.removeEventListener('touchstart', this.Handle_OnPointerDown);
            this.target.removeEventListener('touchmove', this.Handle_OnPointerMove);
            this.target.removeEventListener('touchend', this.Handle_OnPointerUp);
        }
        else {
            this.target.removeEventListener(this.downEvent, this.Handle_OnPointerDown);
            this.target.removeEventListener(this.moveEvent, this.Handle_OnPointerMove);
            this.target.removeEventListener(this.upEvent, this.Handle_OnPointerUp);
        }
        this.target.removeEventListener('wheel', this.Handle_OnWheel);
        Utility.Interval.remove(`${this.cid}-pointer-velocity`);
    }
    applyForMobile() {
        document.body.style.overscrollBehavior = 'none';
        document.body.style.userSelect = 'none';
        document.addEventListener('touchmove', function (e) {
            e.preventDefault();
        }, { passive: false });
        document.addEventListener('contextmenu', function (e) {
            e.preventDefault();
        });
    }
    capturePinchZoom(capture) {
        document.addEventListener('wheel', (e) => {
            if (capture) {
                e.preventDefault();
                e.stopPropagation();
                e.stopImmediatePropagation();
            }
            this.Handle_OnWheel(e);
        }, {
            capture: capture,
            passive: false,
        });
        document.body.style.touchAction = 'pan-x pan-y';
        document.body.style.userSelect = 'none';
    }
    resetRelative(x = 0, y = 0) {
        this.rox = this.rox2 = this.rx = this.rx2 = x;
        this.roy = this.roy2 = this.ry = this.ry2 = y;
        return this;
    }
    get downEvent() {
        let output = '';
        switch (this.eventType) {
            case 'pointer':
                output = 'pointerdown';
                break;
            case 'touch':
                output = 'touchstart';
                break;
            default:
                output = 'mousedown';
                break;
        }
        return output;
    }
    get moveEvent() {
        let output = '';
        switch (this.eventType) {
            case 'pointer':
                output = 'pointermove';
                break;
            case 'touch':
                output = 'touchmove';
                break;
            default:
                output = 'mousemove';
                break;
        }
        return output;
    }
    get upEvent() {
        let output = '';
        switch (this.eventType) {
            case 'pointer':
                output = 'pointerup';
                break;
            case 'touch':
                output = 'touchend';
                break;
            default:
                output = 'mouseup';
                break;
        }
        return output;
    }
    getDistanceBetweenTouches(e) {
        if (e.touches.length < 2)
            return 0;
        const touch1 = e.touches[0];
        const touch2 = e.touches[1];
        const dx = touch1.pageX - touch2.pageX;
        const dy = touch1.pageY - touch2.pageY;
        return Math.sqrt(dx * dx + dy * dy);
    }
    async Handle_OnInterval() {
        const ovx = this.vx;
        const ovy = this.vy;
        this.vx *= this.friction;
        this.vy *= this.friction;
        if (Math.abs(this.vx) < 0.025) {
            this.vx = 0;
        }
        if (Math.abs(this.vy) < 0.025) {
            this.vy = 0;
        }
        if (!isFinite(this.vx)) {
            this.vx = 0;
        }
        if (!isFinite(this.vy)) {
            this.vy = 0;
        }
        if (!this.down) {
            this.x2 += this.vx * 5;
            this.y2 += this.vy * 5;
            this.rx2 += this.vx * 5;
            this.ry2 += this.vy * 5;
        }
        this.changed = this.vx !== ovx || this.vy !== ovy;
    }
    async Handle_OnPointerDown(e) {
        const isTwoFingerTap = 'touches' in e && e.touches.length === 2;
        this.down = true;
        this.moved = false;
        this.timeDown = Date.now();
        this.ox = this.x = 'touches' in e ? e.touches[0].clientX : e.clientX;
        this.oy = this.y = 'touches' in e ? e.touches[0].clientY : e.clientY;
        this.dx = 0;
        this.dy = 0;
        if (this.target !== document) {
            const rect = this.target.getBoundingClientRect();
            this.ox -= rect.left;
            this.oy -= rect.top;
            this.x -= rect.left;
            this.y -= rect.top;
        }
        this.rox = this.rx;
        this.roy = this.ry;
        this.rox2 = this.rx2;
        this.roy2 = this.ry2;
        this.dispatch('down', {
            x: this.x,
            y: this.y,
        });
        const xy = {
            x: this.x,
            y: this.y,
        };
        if (isTwoFingerTap) {
            this.twoFingerTapCount++;
            if (this.twoFingerTapCount === 1) {
                setTimeout(() => {
                    if (this.twoFingerTapCount === 1 && !this.down) {
                        this.dispatch('twofingertap', xy);
                    }
                    else if (this.twoFingerTapCount === 2) {
                        this.dispatch('twofingerdoubletap', xy);
                    }
                    this.twoFingerTapCount = 0;
                }, 300);
            }
        }
        else {
            this.tapCount++;
            if (this.timeDown - this.lastTapTime < 300) {
                clearTimeout(this.tapTimeout);
                this.dispatch('doubletap', xy);
                this.tapCount = 0;
            }
            else {
                this.tapTimeout = setTimeout(() => {
                    if (this.tapCount === 1 && !this.down) {
                        this.dispatch('tap', xy);
                    }
                    this.tapCount = 0;
                }, 300);
            }
            this.lastTapTime = this.timeDown;
            this.holdTimeout = setTimeout(() => {
                if (this.down) {
                    this.dispatch('hold', xy);
                }
            }, 500);
        }
    }
    async Handle_OnPointerMove(e) {
        if (this.moved && this.holdTimeout) {
            clearTimeout(this.holdTimeout);
        }
        this.lastX = this.x;
        this.lastY = this.y;
        this.x = 'touches' in e ? e.touches[0].clientX : e.clientX;
        this.y = 'touches' in e ? e.touches[0].clientY : e.clientY;
        if (this.target !== document) {
            const rect = this.target.getBoundingClientRect();
            this.x -= rect.left;
            this.y -= rect.top;
        }
        this.currentTarget = e.currentTarget;
        this.activeTarget = e.target;
        this.timeDifference = Date.now() - this.time;
        this.time = Date.now();
        this.dispatch('move', {
            x: this.x,
            y: this.y,
        });
        this.vxHistory.push((this.x - this.lastX) / this.timeDifference);
        this.vyHistory.push((this.y - this.lastY) / this.timeDifference);
        if (this.vxHistory.length > 5)
            this.vxHistory.shift();
        if (this.vyHistory.length > 5)
            this.vyHistory.shift();
        if (this.down) {
            this.dx = this.x - this.ox;
            this.dy = this.y - this.oy;
            this.rx = this.rox + this.dx;
            this.ry = this.roy + this.dy;
            this.rx2 = this.rox2 + this.dx;
            this.ry2 = this.roy2 + this.dy;
            this.angle = Math.atan2(this.dy, this.dx) * (180 / Math.PI);
            this.distance = Math.sqrt(Math.pow(this.dx, 2) + Math.pow(this.dy, 2));
            this.moved = Math.abs(this.distance) > this.moveThreshold;
            this.x2 = this.x;
            this.y2 = this.y;
            this.timeDownDifference = this.time - this.timeDown;
            this.inertia = Math.sqrt(Math.pow(this.dx, 2) + Math.pow(this.dy, 2));
            this.vx = this.vxHistory.reduce((a, b) => a + b) / (this.vxHistory.length || 1);
            this.vy = this.vyHistory.reduce((a, b) => a + b) / (this.vyHistory.length || 1);
            this.dispatch('drag', {
                angle: this.angle,
                changed: this.changed,
                distance: this.distance,
                dx: this.dx,
                dy: this.dy,
                inertia: this.inertia,
                moved: this.moved,
                ox: this.ox,
                oy: this.oy,
                rx: this.rx,
                ry: this.ry,
                rx2: this.rx2,
                ry2: this.ry2,
                time: this.time,
                timeDown: this.timeDown,
                timeDownDifference: this.timeDownDifference,
                timeDifference: this.timeDifference,
                vx: this.vx,
                vy: this.vy,
                x: this.x,
                y: this.y,
            });
        }
    }
    async Handle_OnPointerUp(e) {
        this.down = false;
        this.dispatch('up', {
            x: this.x,
            y: this.y,
        });
        if (this.moved && this.holdTimeout) {
            clearTimeout(this.holdTimeout);
        }
    }
    async Handle_OnWheel(e) {
        const isTrackpad = ~~(Math.abs(e.wheelDeltaY || 1) / Math.abs(e.deltaY || 1)) > 1;
        const deltaY = e.deltaY;
        const direction = deltaY > 0 ? 'out' : 'in';
        Utility.Debounce.exec(this.cid, () => {
            this.wheel = false;
            this.wheelDelta = 0;
        }, 100, true);
        if (deltaY) {
            this.wheel = true;
        }
        this.wheelDelta = deltaY;
        this.dispatch('zoom', {
            delta: deltaY * -1,
            direction: direction,
            isTrackpad: isTrackpad,
        });
        this.dispatch('zoom:' + direction, {
            delta: deltaY * -1,
            isTrackpad: isTrackpad,
        });
    }
}
export default new Pointer('pointer', true);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9pbnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9JbnB1dC9Qb2ludGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBOEM3QyxNQUFNLE9BQU8sT0FBUSxTQUFRLEtBQUssQ0FBQyxVQUFVO0lBc1M1QyxZQUFZLFlBQW9CLFNBQVMsRUFBRSxrQkFBMkIsS0FBSyxFQUFFLFNBQWlDLFFBQVE7UUFDckgsS0FBSyxFQUFFLENBQUM7UUFuUkYsVUFBSyxHQUFXLENBQUMsQ0FBQztRQU9sQixZQUFPLEdBQVksS0FBSyxDQUFDO1FBT3pCLGFBQVEsR0FBVyxDQUFDLENBQUM7UUFPckIsU0FBSSxHQUFZLEtBQUssQ0FBQztRQU90QixPQUFFLEdBQVcsQ0FBQyxDQUFDO1FBT2YsT0FBRSxHQUFXLENBQUMsQ0FBQztRQU9mLGFBQVEsR0FBVyxJQUFJLENBQUM7UUFPeEIsWUFBTyxHQUFXLENBQUMsQ0FBQztRQU9wQixVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBT2xCLFVBQUssR0FBVyxDQUFDLENBQUM7UUFPbEIsVUFBSyxHQUFZLEtBQUssQ0FBQztRQU92QixPQUFFLEdBQVcsQ0FBQyxDQUFDO1FBT2YsUUFBRyxHQUFXLENBQUMsQ0FBQztRQU9oQixPQUFFLEdBQVcsQ0FBQyxDQUFDO1FBT2YsUUFBRyxHQUFXLENBQUMsQ0FBQztRQU9oQixRQUFHLEdBQVcsQ0FBQyxDQUFDO1FBQ2hCLFFBQUcsR0FBVyxDQUFDLENBQUM7UUFDaEIsU0FBSSxHQUFXLENBQUMsQ0FBQztRQUNqQixTQUFJLEdBQVcsQ0FBQyxDQUFDO1FBT2pCLE9BQUUsR0FBVyxDQUFDLENBQUM7UUFPZixPQUFFLEdBQVcsQ0FBQyxDQUFDO1FBYWYsU0FBSSxHQUFXLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQU0xQixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBTXJCLHVCQUFrQixHQUFXLENBQUMsQ0FBQztRQU0vQixtQkFBYyxHQUFXLENBQUMsQ0FBQztRQU8zQixPQUFFLEdBQVcsQ0FBQyxDQUFDO1FBT2YsT0FBRSxHQUFXLENBQUMsQ0FBQztRQU9mLE1BQUMsR0FBVyxDQUFDLENBQUM7UUFPZCxPQUFFLEdBQVcsQ0FBQyxDQUFDO1FBT2YsTUFBQyxHQUFXLENBQUMsQ0FBQztRQU9kLE9BQUUsR0FBVyxDQUFDLENBQUM7UUFPZixVQUFLLEdBQVksS0FBSyxDQUFDO1FBT3ZCLGVBQVUsR0FBVyxDQUFDLENBQUM7UUFZcEIsa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFLNUIsUUFBRyxHQUFXLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUt0RCxjQUFTLEdBQVcsRUFBRSxDQUFDO1FBS3ZCLGdCQUFXLEdBQWtCLElBQUksQ0FBQztRQUtsQyxnQkFBVyxHQUFXLENBQUMsQ0FBQztRQUt4QixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBS3JCLGVBQVUsR0FBa0IsSUFBSSxDQUFDO1FBS2pDLHNCQUFpQixHQUFXLENBQUMsQ0FBQztRQUs5QixjQUFTLEdBQWEsRUFBRSxDQUFDO1FBS3pCLGNBQVMsR0FBYSxFQUFFLENBQUM7UUFZaEMsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0QsSUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakUsSUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakUsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUdyRCxJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztRQUN2QyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUczQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUdyQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUtNLFlBQVk7UUFFbEIsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLElBQUksY0FBYyxJQUFJLE1BQU0sSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7WUFFdkYsSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7WUFFdEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7WUFFckUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDbkUsQ0FBQzthQUFNLENBQUM7WUFFUCxJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7WUFFeEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1lBRXhFLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUNyRSxDQUFDO1FBSUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUMxRCxPQUFPLEVBQUUsS0FBSztTQUNkLENBQUMsQ0FBQztRQU1ILE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLEdBQUcsRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsbUJBQW1CLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBS00sWUFBWTtRQUVsQixJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsSUFBSSxjQUFjLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUV2RixJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUV6RSxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUV4RSxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUN0RSxDQUFDO2FBQU0sQ0FBQztZQUVQLElBQUksQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUUzRSxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7WUFFM0UsSUFBSSxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3hFLENBQUM7UUFJRCxJQUFJLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7UUFHOUQsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFLTSxjQUFjO1FBRXBCLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGtCQUFrQixHQUFHLE1BQU0sQ0FBQztRQUdoRCxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDO1FBR3hDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FDeEIsV0FBVyxFQUNYLFVBQVUsQ0FBQztZQUNWLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUNwQixDQUFDLEVBQ0QsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQ2xCLENBQUM7UUFHRixRQUFRLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQztZQUNuRCxDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBTU0sZ0JBQWdCLENBQUMsT0FBZ0I7UUFDdkMsUUFBUSxDQUFDLGdCQUFnQixDQUN4QixPQUFPLEVBQ1AsQ0FBQyxDQUFhLEVBQUUsRUFBRTtZQUNqQixJQUFJLE9BQU8sRUFBRSxDQUFDO2dCQUNiLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztnQkFDbkIsQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO2dCQUNwQixDQUFDLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztZQUM5QixDQUFDO1lBRUQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4QixDQUFDLEVBQ0Q7WUFDQyxPQUFPLEVBQUUsT0FBTztZQUNoQixPQUFPLEVBQUUsS0FBSztTQUNkLENBQ0QsQ0FBQztRQUVGLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxhQUFhLENBQUM7UUFDaEQsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQztJQUN6QyxDQUFDO0lBT00sYUFBYSxDQUFDLElBQVksQ0FBQyxFQUFFLElBQVksQ0FBQztRQUNoRCxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUM5QyxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFLRCxJQUFZLFNBQVM7UUFDcEIsSUFBSSxNQUFNLEdBQVcsRUFBRSxDQUFDO1FBRXhCLFFBQVEsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQ3hCLEtBQUssU0FBUztnQkFDYixNQUFNLEdBQUcsYUFBYSxDQUFDO2dCQUN2QixNQUFNO1lBRVAsS0FBSyxPQUFPO2dCQUNYLE1BQU0sR0FBRyxZQUFZLENBQUM7Z0JBQ3RCLE1BQU07WUFFUDtnQkFDQyxNQUFNLEdBQUcsV0FBVyxDQUFDO2dCQUNyQixNQUFNO1FBQ1IsQ0FBQztRQUVELE9BQU8sTUFBZ0IsQ0FBQztJQUN6QixDQUFDO0lBS0QsSUFBWSxTQUFTO1FBQ3BCLElBQUksTUFBTSxHQUFXLEVBQUUsQ0FBQztRQUV4QixRQUFRLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUN4QixLQUFLLFNBQVM7Z0JBQ2IsTUFBTSxHQUFHLGFBQWEsQ0FBQztnQkFDdkIsTUFBTTtZQUVQLEtBQUssT0FBTztnQkFDWCxNQUFNLEdBQUcsV0FBVyxDQUFDO2dCQUNyQixNQUFNO1lBRVA7Z0JBQ0MsTUFBTSxHQUFHLFdBQVcsQ0FBQztnQkFDckIsTUFBTTtRQUNSLENBQUM7UUFFRCxPQUFPLE1BQWdCLENBQUM7SUFDekIsQ0FBQztJQUtELElBQVksT0FBTztRQUNsQixJQUFJLE1BQU0sR0FBVyxFQUFFLENBQUM7UUFFeEIsUUFBUSxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDeEIsS0FBSyxTQUFTO2dCQUNiLE1BQU0sR0FBRyxXQUFXLENBQUM7Z0JBQ3JCLE1BQU07WUFFUCxLQUFLLE9BQU87Z0JBQ1gsTUFBTSxHQUFHLFVBQVUsQ0FBQztnQkFDcEIsTUFBTTtZQUVQO2dCQUNDLE1BQU0sR0FBRyxTQUFTLENBQUM7Z0JBQ25CLE1BQU07UUFDUixDQUFDO1FBRUQsT0FBTyxNQUFnQixDQUFDO0lBQ3pCLENBQUM7SUFNTyx5QkFBeUIsQ0FBQyxDQUFhO1FBQzlDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQztZQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRW5DLE1BQU0sTUFBTSxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDNUIsTUFBTSxNQUFNLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1QixNQUFNLEVBQUUsR0FBRyxNQUFNLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDdkMsTUFBTSxFQUFFLEdBQUcsTUFBTSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBRXZDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBVVMsS0FBSyxDQUFDLGlCQUFpQjtRQUNoQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3BCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7UUFHcEIsSUFBSSxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUd6QixJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsQ0FBQztRQUVELElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUM7WUFDL0IsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDYixDQUFDO1FBR0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUN4QixJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNiLENBQUM7UUFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsQ0FBQztRQUdELElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDaEIsSUFBSSxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUN2QixJQUFJLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDeEIsSUFBSSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUN6QixDQUFDO1FBR0QsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsRUFBRSxLQUFLLEdBQUcsSUFBSSxJQUFJLENBQUMsRUFBRSxLQUFLLEdBQUcsQ0FBQztJQUNuRCxDQUFDO0lBTVMsS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQTRDO1FBQ2hGLE1BQU0sY0FBYyxHQUFHLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBSTNCLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxTQUFTLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUNyRSxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsU0FBUyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFHckUsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUdaLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQUUsQ0FBQztZQUM5QixNQUFNLElBQUksR0FBSSxJQUFJLENBQUMsTUFBc0IsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1lBQ2xFLElBQUksQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQztZQUNyQixJQUFJLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUM7WUFDcEIsSUFBSSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQztRQUNwQixDQUFDO1FBR0QsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ25CLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBR3JCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFO1lBQ3JCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNULENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNULENBQUMsQ0FBQztRQUVILE1BQU0sRUFBRSxHQUFHO1lBQ1YsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ1QsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ1QsQ0FBQztRQUlGLElBQUksY0FBYyxFQUFFLENBQUM7WUFDcEIsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7WUFFekIsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEtBQUssQ0FBQyxFQUFFLENBQUM7Z0JBQ2xDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7b0JBQ2YsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO3dCQUNoRCxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDbkMsQ0FBQzt5QkFBTSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsS0FBSyxDQUFDLEVBQUUsQ0FBQzt3QkFDekMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDekMsQ0FBQztvQkFFRCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO2dCQUM1QixDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDVCxDQUFDO1FBQ0YsQ0FBQzthQUFNLENBQUM7WUFDUCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFFaEIsSUFBSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxFQUFFLENBQUM7Z0JBQzVDLFlBQVksQ0FBQyxJQUFJLENBQUMsVUFBVyxDQUFDLENBQUM7Z0JBQy9CLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dCQUMvQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztZQUNuQixDQUFDO2lCQUFNLENBQUM7Z0JBQ1AsSUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNqQyxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO3dCQUN2QyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztvQkFDMUIsQ0FBQztvQkFFRCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztnQkFDbkIsQ0FBQyxFQUFFLEdBQUcsQ0FBUSxDQUFDO1lBQ2hCLENBQUM7WUFFRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7WUFFakMsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNsQyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztvQkFDZixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDM0IsQ0FBQztZQUNGLENBQUMsRUFBRSxHQUFHLENBQVEsQ0FBQztRQUNoQixDQUFDO0lBQ0YsQ0FBQztJQU1TLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxDQUF5QztRQUU3RSxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3BDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDaEMsQ0FBQztRQUdELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7UUFLcEIsSUFBSSxDQUFDLENBQUMsR0FBRyxTQUFTLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztRQUMzRCxJQUFJLENBQUMsQ0FBQyxHQUFHLFNBQVMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO1FBRzNELElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQUUsQ0FBQztZQUM5QixNQUFNLElBQUksR0FBSSxJQUFJLENBQUMsTUFBc0IsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1lBQ2xFLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUM7UUFDcEIsQ0FBQztRQUdELElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDLGFBQTRCLENBQUM7UUFDcEQsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUMsTUFBcUIsQ0FBQztRQUc1QyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQzdDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBR3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFO1lBQ3JCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNULENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNULENBQUMsQ0FBQztRQUdILElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBR2pFLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQztZQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDdEQsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDO1lBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUd0RCxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNmLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQzNCLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQzNCLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQzdCLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQzdCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDNUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN2RSxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7WUFDMUQsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNqQixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBR3BELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFHdEUsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2hGLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQztZQUdoRixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRTtnQkFDckIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO2dCQUNqQixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87Z0JBQ3JCLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtnQkFDdkIsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFO2dCQUNYLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRTtnQkFDWCxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87Z0JBQ3JCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFO2dCQUNYLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRTtnQkFDWCxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQ1gsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFO2dCQUNYLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRztnQkFDYixHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUc7Z0JBQ2IsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO2dCQUNmLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtnQkFDdkIsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtnQkFDM0MsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO2dCQUNuQyxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUU7Z0JBQ1gsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFO2dCQUNYLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDVCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7YUFDVCxDQUFDLENBQUM7UUFDSixDQUFDO0lBQ0YsQ0FBQztJQU1TLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUF5QztRQUMzRSxJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztRQUdsQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNuQixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDVCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDVCxDQUFDLENBQUM7UUFHSCxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3BDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDaEMsQ0FBQztJQUNGLENBQUM7SUFNUyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQWE7UUFFM0MsTUFBTSxVQUFVLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsRixNQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQ3hCLE1BQU0sU0FBUyxHQUFHLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBRTVDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUNwQixJQUFJLENBQUMsR0FBRyxFQUNSLEdBQUcsRUFBRTtZQUNKLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ25CLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLENBQUMsRUFDRCxHQUFHLEVBQ0gsSUFBSSxDQUNKLENBQUM7UUFFRixJQUFJLE1BQU0sRUFBRSxDQUFDO1lBQ1osSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDbkIsQ0FBQztRQUVELElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDO1FBRXpCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFO1lBQ3JCLEtBQUssRUFBRSxNQUFNLEdBQUcsQ0FBQyxDQUFDO1lBQ2xCLFNBQVMsRUFBRSxTQUFTO1lBQ3BCLFVBQVUsRUFBRSxVQUFVO1NBQ3RCLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxHQUFHLFNBQVMsRUFBRTtZQUNsQyxLQUFLLEVBQUUsTUFBTSxHQUFHLENBQUMsQ0FBQztZQUNsQixVQUFVLEVBQUUsVUFBVTtTQUN0QixDQUFDLENBQUM7SUFDSixDQUFDO0NBQ0Q7QUFHRCxlQUFlLElBQUksT0FBTyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQyJ9