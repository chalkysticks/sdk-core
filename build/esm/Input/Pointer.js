import { Event, Utility } from '../index.js';
export class Pointer extends Event.Dispatcher {
    static start(eventType = 'pointer', autoTouchEvents = false) {
        if (!this.instance) {
            this.instance = new Pointer(eventType, autoTouchEvents);
        }
    }
    constructor(eventType = 'pointer', autoTouchEvents = false, target = document) {
        super();
        this.angle = 0;
        this.changed = false;
        this.distance = 0;
        this.down = false;
        this.dx = 0;
        this.dy = 0;
        this.friction = 0.95;
        this.inertia = 0;
        this.lastX = 0;
        this.lastY = 0;
        this.moved = false;
        this.rx = 0;
        this.rx2 = 0;
        this.ry = 0;
        this.ry2 = 0;
        this.rox = 0;
        this.roy = 0;
        this.rox2 = 0;
        this.roy2 = 0;
        this.ox = 0;
        this.oy = 0;
        this.time = Date.now();
        this.timeDown = 0;
        this.timeDownDifference = 0;
        this.timeDifference = 0;
        this.vx = 0;
        this.vy = 0;
        this.x = 0;
        this.x2 = 0;
        this.y = 0;
        this.y2 = 0;
        this.wheel = false;
        this.wheelDelta = 0;
        this.moveThreshold = 5;
        this.cid = Math.random().toString(36).substr(2, 9);
        this.eventType = '';
        this.holdTimeout = null;
        this.lastTapTime = 0;
        this.tapCount = 0;
        this.tapTimeout = null;
        this.twoFingerTapCount = 0;
        this.vxHistory = [];
        this.vyHistory = [];
        this.Handle_OnInterval = this.Handle_OnInterval.bind(this);
        this.Handle_OnPointerDown = this.Handle_OnPointerDown.bind(this);
        this.Handle_OnPointerMove = this.Handle_OnPointerMove.bind(this);
        this.Handle_OnPointerUp = this.Handle_OnPointerUp.bind(this);
        this.Handle_OnWheel = this.Handle_OnWheel.bind(this);
        this.autoTouchEvents = autoTouchEvents;
        this.eventType = eventType;
        this.target = target;
        this.attachEvents();
    }
    attachEvents() {
        if (typeof window !== 'undefined' && 'ontouchstart' in window && this.autoTouchEvents) {
            this.target.addEventListener('touchstart', this.Handle_OnPointerDown);
            this.target.addEventListener('touchmove', this.Handle_OnPointerMove);
            this.target.addEventListener('touchend', this.Handle_OnPointerUp);
        }
        else {
            this.target.addEventListener(this.downEvent, this.Handle_OnPointerDown);
            this.target.addEventListener(this.moveEvent, this.Handle_OnPointerMove);
            this.target.addEventListener(this.upEvent, this.Handle_OnPointerUp);
        }
        this.target.addEventListener('wheel', this.Handle_OnWheel, {
            passive: false,
        });
        Utility.Interval.add(this.Handle_OnInterval, 1000 / 60, `${this.cid}-pointer-velocity`);
    }
    detachEvents() {
        if (typeof window !== 'undefined' && 'ontouchstart' in window && this.autoTouchEvents) {
            this.target.removeEventListener('touchstart', this.Handle_OnPointerDown);
            this.target.removeEventListener('touchmove', this.Handle_OnPointerMove);
            this.target.removeEventListener('touchend', this.Handle_OnPointerUp);
        }
        else {
            this.target.removeEventListener(this.downEvent, this.Handle_OnPointerDown);
            this.target.removeEventListener(this.moveEvent, this.Handle_OnPointerMove);
            this.target.removeEventListener(this.upEvent, this.Handle_OnPointerUp);
        }
        this.target.removeEventListener('wheel', this.Handle_OnWheel);
        Utility.Interval.remove(`${this.cid}-pointer-velocity`);
    }
    applyForMobile() {
        document.body.style.overscrollBehavior = 'none';
        document.body.style.userSelect = 'none';
        document.addEventListener('touchmove', function (e) {
            e.preventDefault();
        }, { passive: false });
        document.addEventListener('contextmenu', function (e) {
            e.preventDefault();
        });
    }
    capturePinchZoom(capture) {
        document.addEventListener('wheel', (e) => {
            if (capture) {
                e.preventDefault();
                e.stopPropagation();
                e.stopImmediatePropagation();
            }
            this.Handle_OnWheel(e);
        }, {
            capture: capture,
            passive: false,
        });
        document.body.style.touchAction = 'pan-x pan-y';
        document.body.style.userSelect = 'none';
    }
    resetRelative(x = 0, y = 0) {
        this.rox = this.rox2 = this.rx = this.rx2 = x;
        this.roy = this.roy2 = this.ry = this.ry2 = y;
        return this;
    }
    get downEvent() {
        let output = '';
        switch (this.eventType) {
            case 'pointer':
                output = 'pointerdown';
                break;
            case 'touch':
                output = 'touchstart';
                break;
            default:
                output = 'mousedown';
                break;
        }
        return output;
    }
    get moveEvent() {
        let output = '';
        switch (this.eventType) {
            case 'pointer':
                output = 'pointermove';
                break;
            case 'touch':
                output = 'touchmove';
                break;
            default:
                output = 'mousemove';
                break;
        }
        return output;
    }
    get upEvent() {
        let output = '';
        switch (this.eventType) {
            case 'pointer':
                output = 'pointerup';
                break;
            case 'touch':
                output = 'touchend';
                break;
            default:
                output = 'mouseup';
                break;
        }
        return output;
    }
    getDistanceBetweenTouches(e) {
        if (e.touches.length < 2)
            return 0;
        const touch1 = e.touches[0];
        const touch2 = e.touches[1];
        const dx = touch1.pageX - touch2.pageX;
        const dy = touch1.pageY - touch2.pageY;
        return Math.sqrt(dx * dx + dy * dy);
    }
    async Handle_OnInterval() {
        const ovx = this.vx;
        const ovy = this.vy;
        this.vx *= this.friction;
        this.vy *= this.friction;
        if (Math.abs(this.vx) < 0.025) {
            this.vx = 0;
        }
        if (Math.abs(this.vy) < 0.025) {
            this.vy = 0;
        }
        if (!isFinite(this.vx)) {
            this.vx = 0;
        }
        if (!isFinite(this.vy)) {
            this.vy = 0;
        }
        if (!this.down) {
            this.x2 += this.vx * 5;
            this.y2 += this.vy * 5;
            this.rx2 += this.vx * 5;
            this.ry2 += this.vy * 5;
        }
        this.changed = this.vx !== ovx || this.vy !== ovy;
    }
    async Handle_OnPointerDown(e) {
        const isTwoFingerTap = 'touches' in e && e.touches.length === 2;
        this.down = true;
        this.moved = false;
        this.timeDown = Date.now();
        this.ox = this.x = 'touches' in e ? e.touches[0].clientX : e.clientX;
        this.oy = this.y = 'touches' in e ? e.touches[0].clientY : e.clientY;
        this.dx = 0;
        this.dy = 0;
        if (this.target !== document) {
            const rect = this.target.getBoundingClientRect();
            this.ox -= rect.left;
            this.oy -= rect.top;
            this.x -= rect.left;
            this.y -= rect.top;
        }
        this.rox = this.rx;
        this.roy = this.ry;
        this.rox2 = this.rx2;
        this.roy2 = this.ry2;
        this.dispatch('down', {
            x: this.x,
            y: this.y,
        });
        const xy = {
            x: this.x,
            y: this.y,
        };
        if (isTwoFingerTap) {
            this.twoFingerTapCount++;
            if (this.twoFingerTapCount === 1) {
                setTimeout(() => {
                    if (this.twoFingerTapCount === 1 && !this.down) {
                        this.dispatch('twofingertap', xy);
                    }
                    else if (this.twoFingerTapCount === 2) {
                        this.dispatch('twofingerdoubletap', xy);
                    }
                    this.twoFingerTapCount = 0;
                }, 300);
            }
        }
        else {
            this.tapCount++;
            if (this.timeDown - this.lastTapTime < 300) {
                clearTimeout(this.tapTimeout);
                this.dispatch('doubletap', xy);
                this.tapCount = 0;
            }
            else {
                this.tapTimeout = setTimeout(() => {
                    if (this.tapCount === 1 && !this.down) {
                        this.dispatch('tap', xy);
                    }
                    this.tapCount = 0;
                }, 300);
            }
            this.lastTapTime = this.timeDown;
            this.holdTimeout = setTimeout(() => {
                if (this.down) {
                    this.dispatch('hold', xy);
                }
            }, 500);
        }
    }
    async Handle_OnPointerMove(e) {
        if (this.moved && this.holdTimeout) {
            clearTimeout(this.holdTimeout);
        }
        this.lastX = this.x;
        this.lastY = this.y;
        this.x = 'touches' in e ? e.touches[0].clientX : e.clientX;
        this.y = 'touches' in e ? e.touches[0].clientY : e.clientY;
        if (this.target !== document) {
            const rect = this.target.getBoundingClientRect();
            this.x -= rect.left;
            this.y -= rect.top;
        }
        this.currentTarget = e.currentTarget;
        this.activeTarget = e.target;
        this.timeDifference = Date.now() - this.time;
        this.time = Date.now();
        this.dispatch('move', {
            x: this.x,
            y: this.y,
        });
        this.vxHistory.push((this.x - this.lastX) / this.timeDifference);
        this.vyHistory.push((this.y - this.lastY) / this.timeDifference);
        if (this.vxHistory.length > 5)
            this.vxHistory.shift();
        if (this.vyHistory.length > 5)
            this.vyHistory.shift();
        if (this.down) {
            this.dx = this.x - this.ox;
            this.dy = this.y - this.oy;
            this.rx = this.rox + this.dx;
            this.ry = this.roy + this.dy;
            this.rx2 = this.rox2 + this.dx;
            this.ry2 = this.roy2 + this.dy;
            this.angle = Math.atan2(this.dy, this.dx) * (180 / Math.PI);
            this.distance = Math.sqrt(Math.pow(this.dx, 2) + Math.pow(this.dy, 2));
            this.moved = Math.abs(this.distance) > this.moveThreshold;
            this.x2 = this.x;
            this.y2 = this.y;
            this.timeDownDifference = this.time - this.timeDown;
            this.inertia = Math.sqrt(Math.pow(this.dx, 2) + Math.pow(this.dy, 2));
            this.vx = this.vxHistory.reduce((a, b) => a + b) / (this.vxHistory.length || 1);
            this.vy = this.vyHistory.reduce((a, b) => a + b) / (this.vyHistory.length || 1);
            this.dispatch('drag', {
                angle: this.angle,
                changed: this.changed,
                distance: this.distance,
                dx: this.dx,
                dy: this.dy,
                inertia: this.inertia,
                moved: this.moved,
                ox: this.ox,
                oy: this.oy,
                rx: this.rx,
                ry: this.ry,
                rx2: this.rx2,
                ry2: this.ry2,
                time: this.time,
                timeDown: this.timeDown,
                timeDownDifference: this.timeDownDifference,
                timeDifference: this.timeDifference,
                vx: this.vx,
                vy: this.vy,
                x: this.x,
                y: this.y,
            });
        }
    }
    async Handle_OnPointerUp(e) {
        this.down = false;
        this.dispatch('up', {
            x: this.x,
            y: this.y,
        });
        if (this.moved && this.holdTimeout) {
            clearTimeout(this.holdTimeout);
        }
    }
    async Handle_OnWheel(e) {
        const isTrackpad = ~~(Math.abs(e.wheelDeltaY || 1) / Math.abs(e.deltaY || 1)) > 1;
        const deltaY = e.deltaY;
        const direction = deltaY > 0 ? 'out' : 'in';
        Utility.Debounce.exec(this.cid, () => {
            this.wheel = false;
            this.wheelDelta = 0;
        }, 100, true);
        if (deltaY) {
            this.wheel = true;
        }
        this.wheelDelta = deltaY;
        this.dispatch('zoom', {
            delta: deltaY * -1,
            direction: direction,
            isTrackpad: isTrackpad,
        });
        this.dispatch('zoom:' + direction, {
            delta: deltaY * -1,
            isTrackpad: isTrackpad,
        });
    }
}
//# sourceMappingURL=data:application/json;base64,