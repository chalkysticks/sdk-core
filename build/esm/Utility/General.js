import * as Event from '../Event/index.js';
import Constants from '../Common/Constants.js';
export function documentHeight() {
    return Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);
}
export function getCSSVariable(variableName, element = document.documentElement) {
    const value = getComputedStyle(element).getPropertyValue(variableName).trim();
    return value;
}
export function getDate(dateString = '') {
    dateString || (dateString = Constants.CURRENT_DATE);
    return dateString ? new Date(dateString) : new Date();
}
export function getQueryParameter(key) {
    if (typeof window === 'undefined' || typeof window.location === 'undefined') {
        return null;
    }
    const urlSearchParams = new URLSearchParams(window.location.search);
    return urlSearchParams.get(key);
}
export function getQueryParameters() {
    if (typeof window?.location?.search !== 'string') {
        return {};
    }
    const parameters = {};
    new URLSearchParams(window.location.search).forEach((value, key) => {
        parameters[key] = value || null;
    });
    return parameters;
}
export function offsetLeft(element) {
    let offset = 0;
    do {
        offset += element.offsetLeft;
        element = element.offsetParent;
    } while (element);
    return offset;
}
export function offsetHeight(element) {
    return element.offsetHeight;
}
export function offsetTop(element) {
    let offset = 0;
    do {
        offset += element.offsetTop;
        element = element.offsetParent;
    } while (element);
    return offset;
}
export function offsetWidth(element) {
    return element.offsetWidth;
}
export const requestAnimationFrame = typeof window !== 'undefined' && window.requestAnimationFrame
    ? window.requestAnimationFrame.bind(window)
    : (callback) => setTimeout(() => callback(Date.now()), 16);
export function setQueryParameter(key, value) {
    if (typeof window === 'undefined' || typeof window.history === 'undefined') {
        return;
    }
    const url = new URL(window.location.href);
    const searchParams = url.searchParams;
    const eventPayload = {
        key,
        value,
    };
    if (value === null) {
        searchParams.delete(key);
        Event.Bus.dispatch('queryParameter:unset', eventPayload);
    }
    else {
        searchParams.set(key, value);
        Event.Bus.dispatch('queryParameter:set', eventPayload);
    }
    const newUrl = `${url.pathname}?${searchParams.toString()}${url.hash}`;
    window.history.replaceState({}, '', newUrl);
    Event.Bus.dispatch('queryParameter', eventPayload);
}
export function setQueryParameters(params) {
    if (typeof window === 'undefined' || typeof window.history === 'undefined') {
        return;
    }
    const url = new URL(window.location.href);
    const searchParams = url.searchParams;
    for (const key in params) {
        if (params.hasOwnProperty(key)) {
            const value = params[key];
            if (value === null) {
                searchParams.delete(key);
                Event.Bus.dispatch('queryParameters:unset', params);
            }
            else {
                searchParams.set(key, value);
                Event.Bus.dispatch('queryParameters:set', params);
            }
        }
    }
    const newUrl = `${url.pathname}?${searchParams.toString()}${url.hash}`;
    window.history.replaceState({}, '', newUrl);
    Event.Bus.dispatch('queryParameters', params);
}
export function sleep(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2VuZXJhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9VdGlsaXR5L0dlbmVyYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLEtBQUssTUFBTSxtQkFBbUIsQ0FBQztBQUMzQyxPQUFPLFNBQVMsTUFBTSx3QkFBd0IsQ0FBQztBQUsvQyxNQUFNLFVBQVUsY0FBYztJQUM3QixPQUFPLElBQUksQ0FBQyxHQUFHLENBQ2QsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQzFCLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUMxQixRQUFRLENBQUMsZUFBZSxDQUFDLFlBQVksRUFDckMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEVBQ3JDLFFBQVEsQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUNyQyxDQUFDO0FBQ0gsQ0FBQztBQU9ELE1BQU0sVUFBVSxjQUFjLENBQUMsWUFBb0IsRUFBRSxVQUF1QixRQUFRLENBQUMsZUFBZTtJQUNuRyxNQUFNLEtBQUssR0FBRyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUM5RSxPQUFPLEtBQUssQ0FBQztBQUNkLENBQUM7QUFLRCxNQUFNLFVBQVUsT0FBTyxDQUFDLGFBQXFCLEVBQUU7SUFDOUMsVUFBVSxJQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUVwRCxPQUFPLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7QUFDdkQsQ0FBQztBQVFELE1BQU0sVUFBVSxpQkFBaUIsQ0FBQyxHQUFXO0lBQzVDLElBQUksT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFJLE9BQU8sTUFBTSxDQUFDLFFBQVEsS0FBSyxXQUFXLEVBQUUsQ0FBQztRQUM3RSxPQUFP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