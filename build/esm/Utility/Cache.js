export class Cache {
    constructor(ttl = -1) {
        this.storage = {};
        this.ttl = ttl > 0 ? ttl : 0;
    }
    all() {
        const keys = Object.keys(this.storage);
        const output = {};
        let value;
        for (const key of keys) {
            value = this.get(key);
            if (value !== undefined) {
                output[key] = this.get(key);
            }
        }
        return output;
    }
    delete(key) {
        if (this.storage[key]) {
            delete this.storage[key];
        }
    }
    get(key) {
        const item = this.storage[key];
        let value;
        if (!item) {
            value = undefined;
        }
        else if (item.ttl === 0) {
            value = item.value;
            this.delete(key);
        }
        else if (this.isCachedItemHealthy(item)) {
            value = item.value;
        }
        return value;
    }
    exists(key) {
        return this.storage[key] !== undefined;
    }
    has(key) {
        return this.get(key) !== undefined;
    }
    set(key, value, ttl = 0, immutable = false) {
        const hasItem = this.has(key);
        const time = Date.now();
        if (hasItem && this.isImmutable(key)) {
            return false;
        }
        this.storage[key] = {
            immutable,
            time,
            ttl,
            value,
        };
        return true;
    }
    isCachedItemHealthy(item) {
        const now = Date.now();
        const then = item.time;
        const ttl = item.ttl;
        return then + ttl > now;
    }
    isImmutable(key) {
        const item = this.storage[key];
        return !!item?.immutable;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FjaGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvVXRpbGl0eS9DYWNoZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QkEsTUFBTSxPQUFPLEtBQUs7SUFnQmpCLFlBQVksTUFBYyxDQUFDLENBQUM7UUFacEIsWUFBTyxHQUFnQyxFQUFFLENBQUM7UUFhakQsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBS00sR0FBRztRQUNULE1BQU0sSUFBSSxHQUFhLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2pELE1BQU0sTUFBTSxHQUFRLEVBQUUsQ0FBQztRQUN2QixJQUFJLEtBQVUsQ0FBQztRQUVmLEtBQUssTUFBTSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7WUFDeEIsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFFdEIsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFLENBQUM7Z0JBQ3pCLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzdCLENBQUM7UUFDRixDQUFDO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDZixDQUFDO0lBTU0sTUFBTSxDQUFDLEdBQVc7UUFDeEIsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDdkIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzFCLENBQUM7SUFDRixDQUFDO0lBTU0sR0FBRyxDQUFDLEdBQVc7UUFFckIsTUFBTSxJQUFJLEdBQWdCLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUMsSUFBSSxLQUFVLENBQUM7UUFHZixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDWCxLQUFLLEdBQUcsU0FBUyxDQUFDO1FBQ25CLENBQUM7YUFHSSxJQUFJLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDekIsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNsQixDQUFDO2FBR0ksSUFBSSxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztZQUN6QyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixDQUFDO1FBRUQsT0FBTyxLQUFLLENBQUM7SUFDZCxDQUFDO0lBU00sTUFBTSxDQUFDLEdBQVc7UUFDeEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFNBQVMsQ0FBQztJQUN4QyxDQUFDO0lBUU0sR0FBRyxDQUFDLEdBQVc7UUFDckIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFNBQVMsQ0FBQztJQUNwQyxDQUFDO0lBWU0sR0FBRyxDQUFDLEdBQVcsRUFBRSxLQUFVLEVBQUUsTUFBYyxDQUFDLEVBQUUsWUFBcUIsS0FBSztRQUM5RSxNQUFNLE9BQU8sR0FBWSxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZDLE1BQU0sSUFBSSxHQUFXLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUdoQyxJQUFJLE9BQU8sSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDdEMsT0FBTyxLQUFLLENBQUM7UUFDZCxDQUFDO1FBR0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRztZQUNuQixTQUFTO1lBQ1QsSUFBSTtZQUNKLEdBQUc7WUFDSCxLQUFLO1NBQ0wsQ0FBQztRQUVGLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQU1PLG1CQUFtQixDQUFDLElBQWlCO1FBQzVDLE1BQU0sR0FBRyxHQUFXLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMvQixNQUFNLElBQUksR0FBVyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQy9CLE1BQU0sR0FBRyxHQUFXLElBQUksQ0FBQyxHQUFHLENBQUM7UUFFN0IsT0FBTyxJQUFJLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUN6QixDQUFDO0lBTU8sV0FBVyxDQUFDLEdBQVc7UUFDOUIsTUFBTSxJQUFJLEdBQWdCLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQztJQUMxQixDQUFDO0NBQ0QifQ==