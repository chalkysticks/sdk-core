"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Base = void 0;
class Base {
    static caption(value = 0) {
        let caption;
        if (!isNaN(value)) {
            caption = (this.search(value) || '').toString();
        }
        else {
            caption = value.toString();
        }
        caption = caption.split('_').join(' ');
        caption = caption.toLowerCase();
        caption = caption != ''
            ? caption.split(' ').map(x => x[0].toUpperCase() + x.substr(1)).join(' ')
            : caption;
        return caption;
    }
    static captions() {
        const keys = this.keys();
        const captions = [];
        keys.forEach(key => captions.push(this.caption(key)));
        return captions;
    }
    static captionsAndKeys() {
        const values = this.entries()
            .reduce((obj, [key, value]) => (Object.assign(Object.assign({}, obj), { [key.toLowerCase()]: this.caption(key) })), {});
        for (const key in values) {
            const value = values[key];
            values[key] = this.caption(value);
        }
        return values;
    }
    static captionsAndValues() {
        const values = this.entries()
            .reduce((obj, [key, value]) => (Object.assign(Object.assign({}, obj), { [value]: key })), {});
        for (const key in values) {
            const value = values[key];
            values[key] = this.caption(value);
        }
        return values;
    }
    static entries() {
        return Object.entries(this);
    }
    static keys() {
        return Object.keys(this);
    }
    static search(value) {
        const entry = this.entries().find((ary) => ary[1] == value);
        return entry ? entry[0] : null;
    }
    static values() {
        return Object.values(this);
    }
    static slug(value, toLower = true) {
        let caption = '';
        if (isNaN(value)) {
            caption = this.search(value) || '';
        }
        else {
            caption = value;
        }
        caption = caption.replace('[^a-zA-Z0-9]', '_');
        caption = caption.toLowerCase();
        return caption;
    }
    static toArray() {
        return this.entries()
            .reduce((obj, [key, value]) => (Object.assign(Object.assign({}, obj), { [key]: value })), {});
    }
}
exports.Base = Base;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBS0EsTUFBYSxJQUFJO0lBT04sTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFhLENBQUM7UUFDaEMsSUFBSSxPQUFlLENBQUM7UUFFcEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNmLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDbkQ7YUFDSTtZQUNELE9BQU8sR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDOUI7UUFHRCxPQUFPLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdkMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNoQyxPQUFPLEdBQUcsT0FBTyxJQUFJLEVBQUU7WUFDbkIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1lBQ3pFLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFFZCxPQUFPLE9BQU8sQ0FBQztJQUNuQixDQUFDO0lBT00sTUFBTSxDQUFDLFFBQVE7UUFDbEIsTUFBTSxJQUFJLEdBQWEsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ25DLE1BQU0sUUFBUSxHQUFhLEVBQUUsQ0FBQztRQUU5QixJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJ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